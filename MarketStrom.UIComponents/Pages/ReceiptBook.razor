@page "/ReceiptBook"
@using Blazorise.Components
@using MarketStrom.UIComponents.Models;

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <p class="card-title">ReceiptBook</p>
                </div>
                <div class="row mt-3">
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <label for="person" class="fw-bold me-3 col-4">Person Name</label>
                            <div class="col-6">
                                <Autocomplete TItem="Person" TValue="Person" Placeholder="Type To Search..." Data="@AllPerson"
                                              TextField="@((item) => item.FirstName + " " + item.LastName)" ValueField="@((item) => item)"
                                @bind-SelectedValue="@SelectedPerson" FreeTyping AutoPreSelect=true CloseOnSelection=true Filter="AutocompleteFilter.Contains">
                                </Autocomplete>
                            </div>
                        </div>
                        @if (SelectedPerson != null)
                        {
                            <div class="col-6 d-flex justify-content-end align-items-center">
                                <button class="btn btn-warning" @onclick="PaymentDialogOpen">Payment</button>
                            </div>
                        }
                    </div>
                    @if (SelectedPerson != null)
                    {
                        <div class="mt-3">
                            @{
                                int serialNumber = 1;
                            }
                            <div class="table-responsive pt-3">
                                <table id="khatabook" class="table table-striped expandable-table">
                                    <thead>
                                        <tr class="text-center">
                                            <th>Sr. No.</th>
                                            <th>Amount</th>
                                            <th>Category</th>
                                            <th>Qty</th>
                                            <th>Kg</th>
                                            <th>Price</th>
                                            <th>Order No.</th>
                                            <th>Date</th>
                                            <th>Due Days</th>
                                            <th>Communitive Balance</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (PendingOrders.Count > 0)
                                        {
                                            double cumulativeBalance = 0;
                                            @foreach (var data in PendingOrders)
                                            {
                                                cumulativeBalance += data.TotalAmount;
                                                <tr id="@("row"+data.Id)" class="text-center">
                                                    <td>@serialNumber</td>
                                                    <td>@data.TotalAmount</td>
                                                    <td>@data.CategoryName</td>
                                                    <td>@(data.Quantity == null ? "-" : data.Quantity)</td>
                                                    <td>@(data.Kg == null ? "-" : data.Kg)</td>
                                                    <td>@data.Price</td>
                                                    <td>@data.OrderNumber</td>
                                                    <td>@(data.CreatedOn.ToString("dd-MM-yyyy"))</td>
                                                    <td>@(Math.Round((DateTime.Today.Date - data.CreatedOn.Date).TotalDays, 0)) Days</td>
                                                    <td>@cumulativeBalance</td>
                                                </tr>
                                                serialNumber++;
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="3" class="text-center"> There Is No Orders To Display</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
